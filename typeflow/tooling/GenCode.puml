@startuml
skinparam class {
	BackgroundColor<<CommandLineInputEndpoint>> BurlyWood
	BackgroundColor<<CommandLineArgsInputEndpoint>> BurlyWood
	BackgroundColor<<AliyunHttpInputEndpoint>> BurlyWood
	BackgroundColor<<OutputEndpoint>> BurlyWood
	BackgroundColor<<PureFunction>> LightBlue
}
'class System << (S,#FF7700) Singleton >>

class GenCodeScript <<CommandLineArgsInputEndpoint>>
class ReadFile <<OutputEndpoint>>
class PlantUML2Model <<PureFunction>>
class GenPureJavaFunctions <<PureFunction>>
class GenPureJavaFunction <<PureFunction>>
class GenCommandLineArgsInputEndpoints <<PureFunction>>
class GenCommandLineArgsInputEndpoint <<PureFunction>>
class DispatchGenerators <<PureFunction>>
class SaveCodes <<OutputEndpoint>>
interface CodeLang
CodeLang <|-- LANG_JAVA
CodeLang <|-- LANG_SCALA

modelFilePath::String --> "1" GenCodeScript
outputPath::String --> "2" GenCodeScript
lang::String --> "3" GenCodeScript
packageName::String --> "4" GenCodeScript
platform::String --> "5" GenCodeScript
codeUri::String --> "6" GenCodeScript
GenCodeScript "1" --> Path
GenCodeScript "2" --> LANG_JAVA
GenCodeScript "2" --> LANG_SCALA
GenCodeScript "3" --> outputPath::Path
LANG_JAVA -> GenPureJavaFunctions
Path --> ReadFile
ReadFile --> PUML
PUML --> PlantUML2Model
PlantUML2Model --> domain.Model
domain.Model --> DispatchGenerators
DispatchGenerators --> "1" "Vector[PureFunction]"
DispatchGenerators --> "2" "Vector[CommandLineArgsInputEndpoint]"
DispatchGenerators --> "3" "Vector[OutputEndpoint]"
DispatchGenerators --> "4" "Vector[AliyunHttpInputEndpoint]"
"Vector[PureFunction]" --> GenPureJavaFunctions
GenPureJavaFunctions --> "Vector[JavaCode]"
GenPureJavaFunctions *-- GenPureJavaFunction
"Vector[CommandLineArgsInputEndpoint]" --> GenCommandLineArgsInputEndpoints
GenCommandLineArgsInputEndpoints --> "Vector[ScalaCode]"
GenCommandLineArgsInputEndpoints *-- GenCommandLineArgsInputEndpoint
"Vector[ScalaCode]" --> "1" SaveCodes
"Vector[JavaCode]" --> "1" SaveCodes
outputPath::Path --> "2" SaveCodes
SaveCodes *-- SaveToFile
@enduml